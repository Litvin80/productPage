@use 'globals' as *;
@use 'functions' as *;
@use 'sass:math';

@mixin adaptiveText($startValue, $endValue, $startWidth: $containerWidth, $endWidth: 767.98) {
    font-size: rem($startValue);

    @media (max-width: em($startWidth)) {
        font-size: calc(#{$startValue}px + (#{$endValue} - #{$startValue}) * ((100vw - #{$startWidth}px) / (#{$endWidth} - #{$startWidth})));
    }

    @media (max-width: em($endWidth)) {
        font-size: rem($endValue);
    }
}

@mixin adaptiveValue($property, $startValue, $endValue, $startWidth: $containerWidth, $endWidth: 767.98) {
    #{$property}: rem($startValue);
    @media (max-width: em($startWidth)) {
        #{$property}: calc(#{$startValue}px + (#{$endValue} - #{$startValue}) * ((100vw - #{$startWidth}px) / (#{$endWidth} - #{$startWidth})));
    }
    @media (max-width: em($endWidth)) {
        #{$property}: rem($endValue);
    }
}

@mixin fluid-text($max: 48, $min: 16) {
  $maxViewportWidth: $maxWidth;
  $minViewportWidth: $minWidth;

  $maxSize: math.div($max, 16);
  $minSize: math.div($min, 16);
  $maxWidth: math.div($maxViewportWidth, 16);
  $minWidth: math.div($minViewportWidth, 16);

  $slope: math.div(($maxSize - $minSize), ($maxWidth - $minWidth));
  $yAxisIntersection: -$minWidth * $slope + $minSize;

  font-size: clamp(
    #{$minSize * 1rem},
    #{$yAxisIntersection * 1rem} + #{$slope * 100vw},
    #{$maxSize * 1rem}
  );
}

@mixin hide {
    opacity: 0;
    visibility: hidden;
}

@mixin show {
    opacity: 1;
    visibility: visible;
}

@mixin visually-hidden {
    position: absolute !important;
    width: 1px !important;
    height: 1px !important;
    margin: -1px !important;
    border: 0 !important;
    padding: 0 !important;
    white-space: nowrap !important;
    clip-path: inset(100%) !important;
    clip: rect(0 0 0 0) !important;
    overflow: hidden !important;
}